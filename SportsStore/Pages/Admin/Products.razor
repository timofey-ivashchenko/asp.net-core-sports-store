@page "/admin/products"
@page "/admin"
@inherits OwningComponentBase<IStoreRepository>

@code
{
	IEnumerable<Product> ProductData { get; set; } = Enumerable.Empty<Product>();

	IStoreRepository Repository => Service;

	protected override async Task OnInitializedAsync() => await UpdateData();

	static string GetDetailsUrl(long productId) => $"/admin/products/details/{productId}";

	static string GetEditUrl(long productId) => $"/admin/products/edit/{productId}";

	async Task UpdateData() => ProductData = await Repository.Products.ToListAsync();
}

<table class="table table-sm table-striped table-bordered">
	<thead>
	<tr>
		<th>ID</th>
		<th>Name</th>
		<th>Category</th>
		<th>Price</th>
		<td/>
	</tr>
	</thead>
	<tbody>
	@if (ProductData.Any())
	{
		@foreach (var product in ProductData)
		{
			<tr>
				<td>@product.ProductID</td>
				<td>@product.Name</td>
				<td>@product.Category</td>
				<td>@product.Price.ToString("C")</td>
				<td>
					<NavLink
						class="btn btn-info btn-sm"
						href="@GetDetailsUrl(product.ProductID ?? 0)">
						Details
					</NavLink>
					<NavLink
						class="btn btn-warning btn-sm"
						href="@GetEditUrl(product.ProductID ?? 0)">
						Edit
					</NavLink>
				</td>
			</tr>
		}
	}
	else
	{
		<tr><td colspan="5" class="text-center">No Products</td></tr>
	}
	</tbody>
</table>

<NavLink class="btn btn-primary" href="/admin/products/create">Create</NavLink>